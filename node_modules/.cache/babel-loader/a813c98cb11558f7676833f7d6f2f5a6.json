{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niran\\\\Desktop\\\\Web\\\\corona-js-react\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Charts = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData(await fetchDailyData());\n    }; //  console.log(dailyData);\n\n\n    fetchApi();\n  });\n  const lineChart = dailyData ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0 , 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        lebel: 'People',\n        backgroundColor: [' rgba(0, 0, 245, 0.5)', 'rgba(0,245, 0, 0.5)', 'rgba(245, 0, , 0.5)'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["C:/Users/niran/Desktop/Web/corona-js-react/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","bar","styles","Charts","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchApi","lineChart","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","lebel","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,cAAT,QAA8B,WAA9B;AACA,SAAQC,IAAR,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAOC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAG;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAAR;AAAyCC,EAAAA;AAAzC,CAAD,KAAuD;AACnE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMa,QAAQ,GAAG,YACjB;AAAED,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACD,KAFD,CADa,CAIf;;;AAEEY,IAAAA,QAAQ;AACX,GAPQ,CAAT;AASA,QAAMC,SAAS,GACXH,SAAS,gBACL,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRI,MAAAA,MAAM,EAAEJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADA;AAERC,MAAAA,QAAQ,EAAE,CAAC;AACPZ,QAAAA,IAAI,EAAGK,SAAS,CAACK,GAAV,CAAc,CAAC;AAACT,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADA;AAEPY,QAAAA,KAAK,EAAG,UAFD;AAGPC,QAAAA,WAAW,EAAG,SAHP;AAIPC,QAAAA,IAAI,EAAG;AAJA,OAAD,EAMV;AAAEf,QAAAA,IAAI,EAAGK,SAAS,CAACK,GAAV,CAAc,CAAC;AAACR,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CAAT;AACAW,QAAAA,KAAK,EAAG,QADR;AAEAC,QAAAA,WAAW,EAAG,KAFd;AAGAE,QAAAA,eAAe,EAAG,uBAHlB;AAIAD,QAAAA,IAAI,EAAG;AAJP,OANU;AAFF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAgBL,IAjBR;AAoBJ,QAAME,QAAQ,GACVhB,SAAS,gBAER,oBAAC,GAAD;AACA,IAAA,IAAI,EAAI;AACJQ,MAAAA,MAAM,EAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADL;AAEJG,MAAAA,QAAQ,EAAE,CAAC;AACTM,QAAAA,KAAK,EAAE,QADE;AAETF,QAAAA,eAAe,EAAE,CAChB,uBADgB,EAEf,qBAFe,EAGf,qBAHe,CAFR;AAOThB,QAAAA,IAAI,EAAG,CAACC,SAAD,EAAYE,SAAZ,EAAuBD,MAAvB;AAPE,OAAD;AAFN,KADR;AAcA,IAAA,OAAO,EAAG;AACNiB,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAG;AAAX,OADF;AAENC,MAAAA,KAAK,EAAG;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,oBAAmBlB,OAAQ;AAAlD;AAFF,KAdV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFQ,GA0BL,IA3BR;AA8BE,sBAAS;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJnB,OAAO,GAAGa,QAAH,GAAcT,SADjB,CAAT;AAKD,CAnED;;AAoEA,eAAeT,MAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { fetchDailyData} from '../../api';\r\nimport {Line , bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst  Charts = ({data : {confirmed, deaths, recovered} , country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect( () => {\r\n        const fetchApi = async () =>\r\n        { setDailyData(await fetchDailyData());\r\n        }\r\n      //  console.log(dailyData);\r\n        \r\n        fetchApi();\r\n    }\r\n    );\r\n    const lineChart = (\r\n        dailyData ? (\r\n            <Line data={{\r\n                labels: dailyData.map(({date}) => date), \r\n                datasets: [{\r\n                    data : dailyData.map(({confirmed}) => confirmed),\r\n                    label : 'Infected',\r\n                    borderColor : '#3333ff',\r\n                    fill : true,\r\n                }, \r\n                { data : dailyData.map(({deaths}) => deaths),\r\n                label : 'Deaths',\r\n                borderColor : 'red',\r\n                backgroundColor : 'rgba(255, 0, 0 , 0.5)',\r\n                fill : true,\r\n\r\n                }] } } />\r\n        ) : null\r\n    );\r\n\r\nconst barChart = (\r\n    confirmed ?\r\n    ( \r\n     <Bar \r\n     data = {{\r\n         labels : ['Infected', 'Recovered', 'Deaths'],\r\n         datasets: [{\r\n           lebel: 'People',\r\n           backgroundColor: [\r\n            ' rgba(0, 0, 245, 0.5)',\r\n             'rgba(0,245, 0, 0.5)',\r\n             'rgba(245, 0, , 0.5)', \r\n           ],\r\n           data : [confirmed, recovered, deaths]\r\n\r\n         }]\r\n     }}\r\n     options ={{\r\n         legend: {display : false},\r\n         title : {display :true, text: `Current state in ${country}`}\r\n     }}\r\n\r\n     />  \r\n     \r\n\r\n\r\n\r\n    ) : null\r\n)\r\n\r\n  return(  <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n  </div>\r\n\r\n  )\r\n}\r\nexport default Charts"]},"metadata":{},"sourceType":"module"}